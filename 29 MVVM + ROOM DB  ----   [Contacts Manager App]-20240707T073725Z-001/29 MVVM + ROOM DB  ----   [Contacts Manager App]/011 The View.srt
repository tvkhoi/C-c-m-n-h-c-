1
00:00:00,080 --> 00:00:04,010
We finished the room database repository and the view model.

2
00:00:04,010 --> 00:00:08,420
So we finished the model and the view model sections of the Mvvm.

3
00:00:08,450 --> 00:00:11,510
Now let's move to create our view.

4
00:00:11,540 --> 00:00:15,350
The view represents the user interface of an application.

5
00:00:15,350 --> 00:00:23,690
It includes everything the user can see and interact with, such as UI components, layouts, widgets

6
00:00:23,690 --> 00:00:24,770
and screens.

7
00:00:24,770 --> 00:00:29,390
It defines how the data from the view model is presented to the user.

8
00:00:29,420 --> 00:00:37,130
The view handles user interactions such as button clicks, text input and gestures when a user interacts

9
00:00:37,130 --> 00:00:38,150
with the UI.

10
00:00:38,180 --> 00:00:42,670
The view communicates these actions to the ViewModel.

11
00:00:42,680 --> 00:00:49,640
The View observes live data or other observable data sources provided by the View model.

12
00:00:49,670 --> 00:00:56,900
Live data allows the view to automatically update itself when the underlying data changes, providing

13
00:00:56,900 --> 00:00:59,070
real time updates to the user.

14
00:00:59,090 --> 00:01:05,700
Ideally, the view should not contain business logic or data retrieval code.

15
00:01:05,700 --> 00:01:10,340
Instead, it delegates these responsibilities to the view model.

16
00:01:10,350 --> 00:01:15,750
The separation of concerns helps maintain code, clarity and testability.

17
00:01:15,750 --> 00:01:23,280
So in summary, the view in an Mvvm architecture is responsible for presentation of data and user interactions.

18
00:01:23,280 --> 00:01:29,100
While the View model manages the underlying data, business logic and the communication between the

19
00:01:29,100 --> 00:01:31,330
model and the View.

20
00:01:31,350 --> 00:01:36,370
So let's jump into Android studio and start building our layouts and activities.

21
00:01:36,390 --> 00:01:37,620
Main activity.

22
00:01:37,860 --> 00:01:41,180
Go split mode and remove this text view.

23
00:01:41,190 --> 00:01:43,890
In this example I'll use data binding.

24
00:01:43,890 --> 00:01:52,170
So for that I'll go to the build.gradle and here I'll add the data binding dependency or enable it inside

25
00:01:52,170 --> 00:01:53,610
the Android scope.

26
00:01:53,610 --> 00:02:00,060
I need to add build features data binding equal to true sync.

27
00:02:00,060 --> 00:02:00,900
The project.

28
00:02:00,900 --> 00:02:03,390
Now we're able to use data binding.

29
00:02:03,390 --> 00:02:10,259
So here I'll start with layout tag and I'll move all of these.

30
00:02:11,550 --> 00:02:17,550
Into the layout, and I'll move these namespaces to the layout here.

31
00:02:18,550 --> 00:02:26,350
And inside this constraintlayout I'll create a recycler view and a fab floating action button.

32
00:02:32,590 --> 00:02:35,500
Add the constraints, you can infer it.

33
00:02:36,590 --> 00:02:38,440
Or drag and drop like this.

34
00:02:38,450 --> 00:02:40,020
This is our recycler view.

35
00:02:40,040 --> 00:02:45,050
I'll create a fab floating action button.

36
00:02:46,550 --> 00:02:47,780
Wrap content.

37
00:02:47,780 --> 00:02:48,890
Wrap content.

38
00:02:48,890 --> 00:02:55,820
And this is a small button I'll drag and drop it to here and infer the constraints ensuring that from

39
00:02:55,820 --> 00:03:00,380
the end is 16 deep margin and from the button is 60.

40
00:03:00,380 --> 00:03:04,060
And this is our fab floating action button.

41
00:03:04,070 --> 00:03:06,260
It's just a simple button.

42
00:03:06,290 --> 00:03:11,720
This will direct us to the add new contact activity.

43
00:03:11,750 --> 00:03:15,350
Now let's move and create a new layout file.

44
00:03:15,350 --> 00:03:24,110
I'll name it as contact underscore list item and this will be the template and the layout for every

45
00:03:24,110 --> 00:03:26,450
contact in our application.

46
00:03:26,450 --> 00:03:29,240
Of course I'll use the data binding.

47
00:03:29,240 --> 00:03:31,100
So I'll start with the layout.

48
00:03:31,680 --> 00:03:36,720
And move these and the namespaces move them to the layout.

49
00:03:36,720 --> 00:03:38,870
And this is our constraint layout.

50
00:03:38,880 --> 00:03:45,870
Inside this constraint layout, I'll create two text views, one for the name and one for the email

51
00:03:45,870 --> 00:03:47,120
of the contact.

52
00:03:47,130 --> 00:03:48,810
I'll start with the text view.

53
00:04:20,480 --> 00:04:23,280
And this is our layout to text views.

54
00:04:23,300 --> 00:04:31,460
I'll add margin here, 16 dpi for the whole constraint layout and the height would be wrap content.

55
00:04:31,460 --> 00:04:38,330
So this is our contact list item template for every item in the database.

