1
00:00:00,110 --> 00:00:00,920
Welcome back.

2
00:00:00,920 --> 00:00:05,000
We created our database my underscore quiz underscore db.

3
00:00:05,030 --> 00:00:08,240
And we created the table math underscore table.

4
00:00:08,240 --> 00:00:15,410
This math underscore table contains seven columns ID question option 123 and four.

5
00:00:15,410 --> 00:00:16,850
And the correct option.

6
00:00:16,850 --> 00:00:18,890
Now we can insert records.

7
00:00:18,890 --> 00:00:21,590
So click on insert I'll select one.

8
00:00:21,620 --> 00:00:27,590
This is the ID the question what is the result of five times six.

9
00:00:28,340 --> 00:00:37,100
Specify the option one, 30, 35, 25 and 40 and specify the correct option, which is the 30, and

10
00:00:37,100 --> 00:00:38,240
click go.

11
00:00:38,240 --> 00:00:44,210
Click browse and you can see your database here and the Table Math table.

12
00:00:44,210 --> 00:00:47,930
Select Math Table seven columns one record.

13
00:00:47,930 --> 00:00:51,320
The first record is what is the result of five times six?

14
00:00:51,320 --> 00:00:53,780
And these are the options and the correct option.

15
00:00:53,780 --> 00:01:01,730
We need to fetch these questions from the math underscore table into Json response.

16
00:01:01,730 --> 00:01:02,930
This is our mission.

17
00:01:02,930 --> 00:01:06,110
So for that we need to use an API.

18
00:01:06,140 --> 00:01:13,550
I'll create a new text document and I'll name it as my quiz API.

19
00:01:13,550 --> 00:01:15,740
I want from you to focus with me.

20
00:01:15,740 --> 00:01:24,680
An API application programming interface with a MySQL database refers to a set of rules, protocols,

21
00:01:24,680 --> 00:01:32,540
and tools that allow external applications or systems to interact with and access data from a MySQL

22
00:01:32,540 --> 00:01:33,350
database.

23
00:01:33,350 --> 00:01:41,480
And in our case, we're going to use this API to access the MySQL database from Android application.

24
00:01:41,480 --> 00:01:49,910
This enables developers to create, retrieve, update or delete data in the database without direct

25
00:01:49,910 --> 00:01:51,920
access to the database.

26
00:01:51,920 --> 00:02:00,410
Server APIs provide a structured way for applications to communicate with and manipulate the database,

27
00:02:00,410 --> 00:02:05,300
which is particularly useful in web and mobile app development.

28
00:02:05,300 --> 00:02:13,040
So I'm going to write codes here in my quiz API dot text in PHP language.

29
00:02:13,040 --> 00:02:15,260
I want from you to focus with me.

30
00:02:15,260 --> 00:02:17,660
It's very simple and very important.

31
00:02:17,660 --> 00:02:28,940
I'll start with PHP, then I'll create con equals to my SQL underscore connect, and I'll specify localhost

32
00:02:28,970 --> 00:02:34,400
root, empty string and my quiz underscore db.

33
00:02:34,610 --> 00:02:40,940
In PHP, con is a variable holding the connection to the database.

34
00:02:40,940 --> 00:02:45,860
So the dollar sign refers that this is a variable.

35
00:02:45,860 --> 00:02:48,110
So con is a variable.

36
00:02:48,110 --> 00:02:50,900
MySQL underscore connect.

37
00:02:50,900 --> 00:02:56,450
This is a function used to create a connection to the MySQL database.

38
00:02:56,450 --> 00:03:03,470
It takes four parameters the localhost the host name of the database server, and in this case it's

39
00:03:03,470 --> 00:03:06,380
the local machine where the database is hosted.

40
00:03:06,380 --> 00:03:11,090
Root the username used to connect to the database server.

41
00:03:11,110 --> 00:03:12,680
An empty string.

42
00:03:12,680 --> 00:03:17,750
This is where you would typically provide the password for the database user.

43
00:03:17,750 --> 00:03:24,260
Since it's an empty string in your code, it suggests that you are using an empty password, which is

44
00:03:24,260 --> 00:03:27,650
generally not recommended for production environments.

45
00:03:27,770 --> 00:03:32,510
My quiz DB the name of the database you want to connect to.

46
00:03:32,540 --> 00:03:38,480
So if we go back this is our database my underscore quiz underscore db.

47
00:03:38,480 --> 00:03:45,170
And please guys make sure that you specify it correctly because it's case sensitive.

48
00:03:45,200 --> 00:03:48,170
My underscore quiz underscore db.

49
00:03:48,170 --> 00:03:53,180
This is how we specify and how to establish the connection to the database.

50
00:03:53,180 --> 00:04:01,610
Then I'll specify another variable Stmt statement equals to connect prepare.

51
00:04:01,610 --> 00:04:04,430
And here I need to specify the query.

52
00:04:04,460 --> 00:04:09,860
Don't worry I'll specify and I'll lecture everything later on.

53
00:04:26,810 --> 00:04:30,380
This is the valuable state equals to con.

54
00:04:30,380 --> 00:04:32,150
Prepare, prepare.

55
00:04:32,180 --> 00:04:36,620
This method prepares an SQL statement for execution.

56
00:04:36,620 --> 00:04:40,700
In this code it's preparing a Select statement.

57
00:04:40,730 --> 00:04:41,960
This is the statement.

58
00:04:41,960 --> 00:04:47,750
Select the statement to retrieve data from the math underscore quiz table.

59
00:04:47,750 --> 00:04:50,690
So this is the name of the table I'm using.

60
00:04:50,690 --> 00:04:59,360
The select here is the SQL query and the SQL statement selects several columns from the math underscore

61
00:04:59,360 --> 00:05:02,150
quiz table, including the question.

62
00:05:02,180 --> 00:05:03,290
Option one.

63
00:05:03,290 --> 00:05:04,070
Option two.

64
00:05:04,070 --> 00:05:04,790
Option three.

65
00:05:04,790 --> 00:05:05,660
Option four.

66
00:05:05,660 --> 00:05:09,740
Correct underscore option from the math underscore quiz.

67
00:05:09,740 --> 00:05:19,760
Make sure guys that you specify them exactly as the name of the columns, and otherwise it will create

68
00:05:19,760 --> 00:05:20,330
an error.

69
00:05:20,330 --> 00:05:27,500
So ID question option one, option two, option three, option four and correct underscore option.

70
00:05:27,500 --> 00:05:35,430
After preparing the SQL statement, you can execute it and retrieve the result using additional MySQL

71
00:05:35,690 --> 00:05:36,830
functions.

72
00:05:36,830 --> 00:05:43,640
For example, you would use execute method to run the prepared statements and fetch the results.

73
00:05:43,640 --> 00:05:53,840
So here I'll make a comment execute and here I'll start by stmt and call the execute function.

74
00:05:53,840 --> 00:05:56,360
In the next video we'll continue with the API.

